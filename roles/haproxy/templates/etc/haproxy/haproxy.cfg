#jinja2:lstrip_blocks: True
# {{ ansible_managed }}
{#
This is a macro used to unroll the nested structure:
Dictionaries are unrolled like this:

dict:
  key1: val1
  key2: val2
  key3:
    - list1
    - list2
    - list3
  key4:
    key5:  val3
    key6:  val4

#### Result: ####
    key1                          val1
    key2                          val2

    key3                          list1
    key3                          list2
    key3                          list3

    key4 key5                     val3
    key4 key6                     val4

dev hints:
- The {{- removes unnecessary indenting of deeply nested structures
- The -}} removes extra newlines
#}
{% macro funroll_loops(var, parent=undef) %}
  {% if var is mapping %}
    {% for key, value in var.items() | sort %}
      {% if parent is defined %}
        {% set key = parent|string + ' ' + key %}
      {% endif %}
      {{- funroll_loops( value, parent=key ) -}}
    {% endfor %}
  {% elif var is iterable and var is not string %}
    {% for i in var %}
      {% if i is string %}
    {{ parent.ljust(29) }} {{ i }}
      {% else %}
        {{- funroll_loops( i ) -}}
      {% endif %}
    {% endfor %}
  {% else %}
    {{ parent.ljust(29) }} {{ var }}
  {% endif %}
{%- endmacro %}

global
{{ funroll_loops( haproxy.global ) }}

#################################################################
### TCP Section
#################################################################

defaults
{{ funroll_loops( haproxy.tcp.defaults ) }}

{% if haproxy.tcp.frontends is defined %}
{% for frontend, val_1 in haproxy.tcp.frontends.items()|sort %}
frontend {{ frontend }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}

{% if haproxy.tcp.backends is defined %}
{% for backend, val_1 in haproxy.tcp.backends.items()|sort %}
backend {{ backend }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}

{% if haproxy.tcp.listens is defined %}
{% for listen, val_1 in haproxy.tcp.listens.items()|sort %}
listen {{ listen }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}

########################################################################
### HTTP Section
########################################################################

defaults
{{ funroll_loops( haproxy.http.defaults ) }}

{% if haproxy.http.userlists is defined %}
{% for userlist, val_1 in haproxy.http.userlists.items()|sort %}
userlist {{ userlist }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}

{% if haproxy.http.frontends is defined %}
{% for frontend, val_1 in haproxy.http.frontends.items()|sort %}
frontend {{ frontend }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}

{% if haproxy.http.backends is defined %}
{% for backend, val_1 in haproxy.http.backends.items()|sort %}
backend {{ backend }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}

{% if haproxy.http.listens is defined %}
{% for listen, val_1 in haproxy.http.listens.items()|sort %}
listen {{ listen }}
{{ funroll_loops( val_1 ) }}
{% endfor %}
{% endif -%}
